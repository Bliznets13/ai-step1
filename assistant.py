import json, os, datetime  # (–Ω–∞–±–æ—Ä –≥–æ—Ç–æ–≤—ã—Ö ¬´—è—â–∏–∫–æ–≤ —Å –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞–º–∏¬ª: —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ, –≤—Ä–µ–º—è)

TASKS_FILE = "tasks.json"  # (–∏–º—è —Ñ–∞–π–ª–∞, –∫—É–¥–∞ –±—É–¥–µ–º —Å–∫–ª–∞–¥—ã–≤–∞—Ç—å –∑–∞–¥–∞—á–∏ ‚Äî –∫–∞–∫ ¬´—Ç–µ—Ç—Ä–∞–¥—å¬ª)

def load_tasks():
    if os.path.exists(TASKS_FILE):
        with open(TASKS_FILE, "r", encoding="utf-8") as f:
            return json.load(f)
    return []

def save_tasks(tasks):
    with open(TASKS_FILE, "w", encoding="utf-8") as f:
        json.dump(tasks, f, ensure_ascii=False, indent=2)

def show_menu():
    print("\n=== –ö–æ–Ω—Å–æ–ª—å–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫ ===")
    print("1) –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ")
    print("2) –¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è")
    print("3) –ü–æ–∫–∞–∑–∞—Ç—å –∑–∞–¥–∞—á–∏")
    print("4) –î–æ–±–∞–≤–∏—Ç—å –∑–∞–¥–∞—á—É")
    print("5) –£–¥–∞–ª–∏—Ç—å –∑–∞–¥–∞—á—É")
    print("0) –í—ã—Ö–æ–¥")

def main():
    tasks = load_tasks()
    while True:
        show_menu()
        choice = input("–í–∞—à –≤—ã–±–æ—Ä: ").strip()
        if choice == "1":
            name = input("–ö–∞–∫ –≤–∞—Å –∑–æ–≤—É—Ç? ")
            print(f"–ü—Ä–∏–≤–µ—Ç, {name}!")
        elif choice == "2":
            now = datetime.datetime.now().strftime("%Y-%m-%d %H:%M:%S")
            print(f"–°–µ–π—á–∞—Å: {now}")
        elif choice == "3":
            if not tasks:
                print("–°–ø–∏—Å–æ–∫ –∑–∞–¥–∞—á –ø—É—Å—Ç.")
            else:
                for i, t in enumerate(tasks, 1):
                    print(f"{i}. {t}")
        elif choice == "4":
            t = input("–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –∑–∞–¥–∞—á–∏: ").strip()
            if t:
                tasks.append(t)
                save_tasks(tasks)
                print("‚úÖ –ó–∞–¥–∞—á–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞.")
        elif choice == "5":
            if not tasks:
                print("–£–¥–∞–ª—è—Ç—å –Ω–µ—á–µ–≥–æ.")
            else:
                idx = input("–ù–æ–º–µ—Ä –∑–∞–¥–∞—á–∏ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è: ").strip()
                if idx.isdigit() and 1 <= int(idx) <= len(tasks):
                    removed = tasks.pop(int(idx)-1)
                    save_tasks(tasks)
                    print(f"üóëÔ∏è –£–¥–∞–ª–µ–Ω–æ: {removed}")
                else:
                    print("–ù–µ–≤–µ—Ä–Ω—ã–π –Ω–æ–º–µ—Ä.")
        elif choice == "0":
            print("–ü–æ–∫–∞!")
            break
        else:
            print("–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞.")

if __name__ == "__main__":
    main()
